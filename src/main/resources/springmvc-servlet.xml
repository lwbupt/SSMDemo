<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- 激活@Required @AutoWired @Resource等标注 -->
	<context:annotation-config />
	
    <!-- HandlerMapper无需显示配置，Spring MVC可以默认启动 -->
    
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven />
    
    <!-- DispatcherServlet上下文，包扫描位置，只管理@Controller类型的Bean，忽略@Service等 -->
    <context:component-scan base-package="com.ssmdemo.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 访问静态资源 -->
    <mvc:default-servlet-handler />
    
    <!-- 配置是静态资源 css,js,imgs等的位置，缺省Servlet 直接返回 -->
    <!--  
    <mvc:resources location="/static/"  mapping="/static/**"/>
    -->
    
    <!-- 配置视图解析器viewResolver,（jsp文件前缀后缀） 
    	  可以配置多个ViewResolver,
    	   用order进行顺序配置
    -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件总大小限制 -->
        <property name="maxUploadSize" value="10000000" />
        <property name="defaultEncoding" value = "UTF-8" />
        <property name="resolveLazily" value = "true" />
    </bean>
    
    <!-- 配置tiles模板(没有用到tiles可以不用配置此项) -->
   <!-- 
   <bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-definitions.xml</value>
            </list>
        </property>

    </bean>
	-->
</beans>